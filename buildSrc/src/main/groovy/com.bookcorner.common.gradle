plugins {
    id 'java'
    id 'idea'
    id 'io.spring.dependency-management'
}

rootProject.file('./buildSrc/versions.properties').withInputStream { stream ->
    def properties = new Properties()
    properties.load(stream)
    properties.each { key, value -> ext.set("${key}", value) }
}

group = 'com.bookcorner'
version = '0.0.3-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
        vendor = JvmVendorSpec.AZUL
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.commons:commons-lang3:3.18.0'
    implementation 'commons-io:commons-io:2.20.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springdoc:springdoc-openapi-bom:${springDocOpenApiVersion}"
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += [
        '-parameters',          // Preserve parameter names for reflection
        '-Xlint:unchecked',     // Enable unchecked operation warnings
        '-Xlint:deprecation'    // Enable deprecation warnings
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}
